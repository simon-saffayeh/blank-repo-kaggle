{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":8834193,"sourceType":"datasetVersion","datasetId":5315971},{"sourceId":8834437,"sourceType":"datasetVersion","datasetId":5316158},{"sourceId":2314697,"sourceType":"datasetVersion","datasetId":661950}],"dockerImageVersionId":30732,"isInternetEnabled":false,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\nfrom sklearn.tree import DecisionTreeRegressor\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\ndata = pd.read_csv(\"/kaggle/input/car-prices/Car_prices.csv\")\ny = data.Price\ncolumns = ['MPG.city', 'MPG.highway']\nX = data[columns]\n# print(X.head())\nMPG_city = input(\"Enter the miles per gallon in a city:\")\nMPG_highway = input(\"Enter the miles per gallon in a highway:\")\ninput_data = pd.DataFrame({\n    'MPG.city': [MPG_city],\n    'MPG.highway': [MPG_highway]\n})\ndata_model = DecisionTreeRegressor(random_state=1)\ndata_model.fit(X,y)\nprint(data_model.predict(input_data))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-07-02T12:01:05.106530Z","iopub.execute_input":"2024-07-02T12:01:05.107398Z","iopub.status.idle":"2024-07-02T12:01:11.542990Z","shell.execute_reply.started":"2024-07-02T12:01:05.107356Z","shell.execute_reply":"2024-07-02T12:01:11.541856Z"},"trusted":true},"execution_count":2,"outputs":[{"name":"stdout","text":"/kaggle/input/car-prices/Car_prices.csv\n/kaggle/input/heights/GaltonFamilies.csv\n","output_type":"stream"},{"output_type":"stream","name":"stdin","text":"Enter the miles per gallon in a city: 34\nEnter the miles per gallon in a highway: 23\n"},{"name":"stdout","text":"[7.4]\n","output_type":"stream"}]},{"cell_type":"code","source":"data2 = pd.read_csv(\"/kaggle/input/heights/GaltonFamilies.csv\")\ny2 = data2.childHeight\ncolumns2 = [\"mother\",\"father\"]\nX2 = data2[columns2]\n\nmother = input(\"Mother height:\")\nfather = input(\"Father height:\")\n\ninput_data2 = pd.DataFrame({\n    'mother': [mother],\n    'father': [father],\n})\n\ndata_model2 = DecisionTreeRegressor(random_state=1)\ndata_model2.fit(X2,y2)\nprint(data_model2.predict(input_data2))\n","metadata":{"execution":{"iopub.status.busy":"2024-07-02T12:08:37.842533Z","iopub.execute_input":"2024-07-02T12:08:37.842957Z"},"trusted":true},"execution_count":null,"outputs":[]}]}